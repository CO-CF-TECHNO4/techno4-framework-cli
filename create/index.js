#!/usr/bin/env node
/* eslint no-console: off */
const exec = require('exec-sh');
const path = require('path');
const chalk = require('chalk');
const logSymbols = require('log-symbols');
const fse = require('../utils/fs-extra');
const generatePackageJson = require('./utils/generate-package-json');

const createFolders = require('./templates/create-folders');
const copyAssets = require('./templates/copy-assets');
const createCordova = require('./templates/create-cordova');
const createCapacitor = require('./templates/create-capacitor');
const generateReadme = require('./utils/generate-readme');
const generateGitignore = require('./utils/generate-gitignore');
const log = require('../utils/log');

const waitText = chalk.gray('(–û—á—ñ–∫—É–π—Ç–µ, —Ü–µ –º–æ–∂–µ –∑–∞–π–Ω—è—Ç–∏ –¥–µ—è–∫–∏–π —á–∞—Å.)');

module.exports = async (options = {}, logger, { exitOnError = true, iconFile = null } = {}) => {
  const cwd = options.cwd || process.cwd();
  const isRunningInCwd = cwd === process.cwd();
  function errorExit(err) {
    log.error(err.stderr || err);
    if (exitOnError) process.exit(1);
  }
  if (options.bundler) {
    log.error('Attention!');
    log.error('For Vite it is recommended to have modern and latest Node.js and NPM.');
    log.error('Make sure you have at least Node.js v14 and NPM v7 installed on your system.');
  }

  if (!logger) {
    // eslint-disable-next-line
    logger = {
      statusStart() {},
      statusDone() {},
      statusError() {},
      text() {},
      error() {},
    };
  }

  // Options
  const { type } = options;

  // Package
  logger.statusStart('–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è package.json.');
  const packageJson = generatePackageJson(options);

  // Write Package.json and project json
  fse.writeFileSync(path.join(cwd, 'package.json'), packageJson.content);
  fse.writeFileSync(path.join(cwd, 'techno4.json'), JSON.stringify(options, '', 2));

  logger.statusDone('–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è package.json.');

  // Create Folders
  logger.statusStart('–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ —Ñ–∞–π–ª—ñ–≤.');
  try {
    createFolders(options);
  } catch (err) {
    logger.statusError('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ —Ñ–∞–π–ª—ñ–≤.');
    if (err) logger.error(err.stderr);
    errorExit(err);
  }
  logger.statusDone('–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ —Ñ–∞–π–ª—ñ–≤.');

  // Install NPM depenencies
  logger.statusStart(`${'–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è NPM –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π.'} ${waitText}`);
  try {
    if (!isRunningInCwd) {
      await exec.promise(
        `cd ${cwd.replace(/ /g, '\\ ')} && npm install ${packageJson.dependencies.join(
          ' ',
        )} --save --package-lock-only --no-package-lock --ignore-scripts`,
        true,
      );
    } else {
      await exec.promise(
        `npm install ${packageJson.dependencies.join(
          ' ',
        )} --save --package-lock-only --no-package-lock --ignore-scripts`,
        true,
      );
    }
  } catch (err) {
    logger.statusError('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó NPM –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π.');
    if (err) logger.error(err.stderr);
    errorExit(err);
    return;
  }
  logger.statusDone('–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è NPM –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π.');

  // Install NPM dev depenencies
  logger.statusStart(`${'–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è NPM –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞.'} ${waitText}`);
  try {
    if (!isRunningInCwd) {
      await exec.promise(
        `cd ${cwd.replace(/ /g, '\\ ')} && npm install ${packageJson.devDependencies.join(
          ' ',
        )} --save-dev --package-lock-only --no-package-lock --ignore-scripts`,
        true,
      );
    } else {
      await exec.promise(
        `npm install ${packageJson.devDependencies.join(
          ' ',
        )} --save-dev --package-lock-only --no-package-lock --ignore-scripts`,
        true,
      );
    }
  } catch (err) {
    logger.statusError('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –¥–æ–¥–∞–≤–∞–Ω–Ω—è NPM –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞.');
    if (err) logger.error(err.stderr);
    errorExit(err);
    return;
  }
  logger.statusDone('–î–æ–¥–∞–≤–∞–Ω–Ω—è NPM –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞.');

  // Create Cordova project
  if (type.indexOf('cordova') >= 0) {
    logger.statusStart(`${'–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è Cordova –ø—Ä–æ–µ–∫—Ç—É.'} ${waitText}.`);
    try {
      await createCordova(options);
    } catch (err) {
      logger.statusError('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è Cordova –ø—Ä–æ–µ–∫—Ç—É.');
      if (err) logger.error(err.stderr);
      errorExit(err);
      return;
    }
    logger.statusDone('–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è Cordova –ø—Ä–æ–µ–∫—Ç—É.');
  }

  // Create Capacitor project
  if (type.indexOf('capacitor') >= 0) {
    logger.statusStart(`${'–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è Capacitor –ø—Ä–æ–µ–∫—Ç—É.'} ${waitText}`);
    try {
      await createCapacitor(options);
    } catch (err) {
      logger.statusError('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó Capacitor –ø—Ä–æ–µ–∫—Ç—É.');
      if (err) logger.error(err.stderr);
      errorExit(err);
      return;
    }
    logger.statusDone('–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è Capacitor –ø—Ä–æ–µ–∫—Ç—É.');
  }

  // Create Project Files
  logger.statusStart('–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ñ–∞–π–ª—ñ–≤ –ø—Ä–æ–µ–∫—Ç—É.');
  const filesToCopy = copyAssets(options, iconFile);
  try {
    // eslint-disable-next-line
    await Promise.all(
      filesToCopy.map((f) => {
        if (f.from) {
          return fse.copyFileAsync(f.from, f.to);
        }
        if (f.content) {
          return fse.writeFileAsync(f.to, f.content);
        }
        return Promise.resolve();
      }),
    );
  } catch (err) {
    logger.statusError('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ñ–∞–π–ª—ñ–≤ –ø—Ä–æ–µ–∫—Ç—É.');
    if (err) logger.error(err.stderr || err);
    errorExit(err);
    return;
  }

  // Generate Readme
  const readMeContent = generateReadme(options);
  try {
    fse.writeFileSync(path.join(cwd, 'README.md'), readMeContent);
  } catch (err) {
    logger.statusError('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ñ–∞–π–ª—ñ–≤ –ø—Ä–æ–µ–∫—Ç—É.');
    if (err) logger.error(err.stderr || err);
    errorExit(err);
    return;
  }

  // Generate .gitignore
  const gitignoreContent = generateGitignore(options);
  try {
    fse.writeFileSync(path.join(cwd, '.gitignore'), gitignoreContent);
  } catch (err) {
    logger.statusError('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ñ–∞–π–ª—ñ–≤ –ø—Ä–æ–µ–∫—Ç—É.');
    if (err) logger.error(err.stderr || err);
    errorExit(err);
    return;
  }

  logger.statusDone('–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ñ–∞–π–ª—ñ–≤ –ø—Ä–æ–µ–∫—Ç—É.');

  // Final Text
  const finalText = `
${chalk.bold(logSymbols.success)} ${chalk.bold('–í–∏–∫–æ–Ω–∞–Ω–æ!')} üí™

${chalk.bold(logSymbols.info)} ${chalk.bold('–ü–æ–¥–∞–ª—å—à—ñ –∫—Ä–æ–∫–∏:')}
  - üòéüòâ –ó–∞–ø—É—Å—Ç—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É "npm install" –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞–∫–µ—Ç—ñ–≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π.
  - ‚úî‚úî –ó–∞–ø—É—Å—Ç—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É "npm start" –¥–ª—è –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä–∞ —Ä–æ–∑—Ä–æ–±–∫–∏.
  - ‚ú®‚ú® –û—Ñ—ñ—Ü—ñ–π–Ω–∏–π —Å–∞–π—Ç –ø—Ä–æ—î–∫—Ç—É ${chalk.bold('https://techno4.online')}.
  - üìñüìñ –®—É–∫–∞–π—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—é –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º ${chalk.bold('https://techno4.online/–Ω–∞–¥–±–∞–Ω–Ω—è/—Ñ—Ä–µ–π–º–≤–æ—Ä–∫')}.
  - üìñüìñ –ß–∏—Ç–∞–π—Ç–µ ${chalk.bold('README.md')} –≤ —Ñ–∞–π–ª–∞—Ö –ø—Ä–æ–µ–∫—Ç—É –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ–π.

${chalk.bold('–ü–æ–¥–æ–±–∞—î—Ç—å—Å—è Techno4? –ü—ñ–¥—Ç—Ä–∏–º–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç: ${chalk.bold("https://techno4.online/—Ä–µ—î—Å—Ç—Ä–∞—Ç—É—Ä–∞/–∑—Ä–æ–±–∏—Ç–∏-–±–ª–∞–≥–æ–¥—ñ–π–Ω–∏–π-–≤–Ω–µ—Å–æ–∫")}')}
    `;

  logger.text(finalText);
};
